
[project]
name = "temporal-monitoring-system"
version = "1.0.0"
description = "Temporal monitoring and analysis system with GTI pipeline"
authors = [
    {name = "Temporal Systems", email = "admin@temporal-systems.dev"}
]
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "flask>=3.1.1",
    "flask-login>=0.6.3",
    "flask-sqlalchemy>=3.1.1",
    "gunicorn>=23.0.0",
    "werkzeug>=3.1.3",
    "sqlalchemy>=2.0.42",
    "psycopg>=3.1.0",
    "numpy>=2.3.2",
    "scipy>=1.16.1",
    "scikit-learn>=1.7.1",
    "matplotlib>=3.10.5",
    "requests>=2.31.0",
    "beautifulsoup4>=4.12.0",
    "python-dateutil>=2.8.0",
    "email-validator>=2.2.0",
    "pyyaml>=6.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0"
]

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["temporal_monitoring"]

modules = ["nodejs-20", "python-3.11", "postgresql-16"]

[nix]
channel = "stable-25_05"
packages = ["cairo", "ffmpeg-full", "freetype", "ghostscript", "glibcLocales", "gobject-introspection", "gtk3", "libxcrypt", "openssl", "pkg-config", "postgresql", "qhull", "tcl", "tk", "xsimd", "run"]

[deployment]
deploymentTarget = "autoscale"
run = ["gunicorn", "--bind", "0.0.0.0:5000", "main:app"]

[workflows]
runButton = "Start application"

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Start application"

[[workflows.workflow]]
name = "Start application"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "gunicorn --bind 0.0.0.0:5000 --reuse-port --reload main:app"
waitForPort = 5000

[[ports]]
localPort = 5000
externalPort = 80
